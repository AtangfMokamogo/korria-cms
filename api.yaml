openapi: 3.0.0
info:
  title: Korria Headless CMS API
  description: Korria is a minimal implementation of a headless content management system. This API documentation defines the Minimum Viable Product of the CMS
  version: 0.0.1

servers:
  - url: http://localhost:8080/api/v1/users
    description: The main API server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /register:
    post:
      summary: Account registration
      tags:
        - Authentication and Authorisation
      description: This endpoint allows users to create a Korria Account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  example: "ALX TESTER"
                email:
                  type: string
                  example: "tester@alx.mail"
                password:
                  type: string
                  example: "some-secret-string"
              required:
                - fullname
                - email
                - password
      responses:
        '201':
          description: Created a new User
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  created_at:
                    type: string
                    example: "2023-10-16T15:24:15.011Z"
                  id:
                    type: string
                    example: "652d559f0daa229070f6c169"
                  email:
                    type: string
                    example: "test@mail.com"
                  role:
                    type: string
                    example: "admin"
        
        '400':
          description: Error provided email exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "email test@mail.com exists"

  /login:
    post:
      summary: User Login
      tags:
        - Authentication and Authorisation
      description: This endpoint logs a user into the api generating a token for them
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Logged in Succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "User Logged In"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmaXJzdG5hbWUiOiJMYXdkIFB1bGxpeCIsImVtYWlsIjoibGF3ZGRAbWFpbDMiLCJpYXQiOjE2OTc0Njk0MjksImV4cCI6MTY5NzU1NTgyOX0.JTGCMy_2KTHn8aWT1jYLBX-0ntPsiSiGTrsXUsz1UdE"
                  user:
                    type: object
                    example: { "name": "ALX USER", "email": "alxuser@mail.com" }

  /projects/new_project:
    post:
      summary: Create a new Korria Project
      tags:
        - Project Creation and Management
      description: This endpoint allows users to create a new Korria Project a project houses all content and collections of content(orders).
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '201':
          description: Created a new project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "project added succesfully!"
                  name:
                    type: string
                    example: "Project: <project name>"
                  createdby:
                    type: string
                    example: "alx@mail.com"
                  date-created:
                    type: string
                    example: "2023-10-16T16:44:00.697Z"
                  project-id:
                    type: string
                    example: "652d6850658e3bad181b9b54"
        
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/user_projects:
    get:
      summary: Retrieves all projects created by user
      tags:
        - Project Creation and Management
      description: This endpoint allows a user to view all projects under their account
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Created a new project
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: object
                    example: {
                      "projects": [
                        {
                          "_id": "652d696b730292469ea3c39e",
                          "name": "some-other",
                          "createdby": "lawdd@mail3",
                          "permissions": "Admin",
                          "createdon": "2023-10-16T16:48:43.487Z",
                          "__v": 0
                        }
                      ]
                    }
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/delete_project:
    get:
      summary: Removes a project by its passed ID
      tags:
        - Project Creation and Management
      description: This endpoint allows a user to delete projects under their account by their id
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                project:
                  type: string
              required:
                - id
                - project
      responses:
        '200':
          description: Deleted the project of the passed ID and Name
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  message:
                    type: string
                    example: "Project ALX-Website: Deleted Succesfully"
                  user:
                    type: string
                    example: "LawdPullix"
        '202':
          description: No Project of ID or Name to delete
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Failed
                  error:
                    type: string
                    example: "Project ALX-Website of ID: 65246faa24925f74f1e7e733. Is not available"
                  message:
                    type: string
                    example: "Could not find project to delete"
        '400':
          description: Missing parameters in the request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Missing Parameters in Request "
                  message:
                    type: string
                    example: "ID or Project fields missing"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/{projectname}/orders/new:
    post:
      summary: creates a new collection of content tupes
      tags:
        - Content Collections Creation and Management
      description: This endpoint allows a user to delete projects under their account by their id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the order will be created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
              required:
                - name
      responses:
        '201':
          description: A new order has been created on project passed in url path
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  message:
                    type: string
                    example: "Project ALX-Website: Deleted Succesfully"
                  user:
                    type: string
                    example: "LawdPullix"
        '400':
          description:  Project does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Project does not exists"
                  message:
                    type: string
                    example: "cannot create order Blog Post in an unavailable project"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/{projectname}/orders/get_tagged:
    post:
      summary: retrieves a collection of content types by their tags
      tags:
        - Content Collections Creation and Management
      description: This endpoint allows a user to retrieve orders under their account by their tags
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the order will be created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  items:
                    type: string
              required:
                - tags
      responses:
        '200':
          description: A list of Orders associated with the provided tags
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  orders:
                    type: array
                    items:
                      type: object
                    example: { 
                      status: "Success",
                      orders: [
                                {
                                   "_id": "652d9944ca3a089c6f054bca",
                                   "name": "tagged",
                                   "tags": [
                                      "homepage",
                                      "New"
                                    ],
                                    "project": "appa",
                                    "createdby": "lawdd@mail3",
                                    "parcels": [],
                                    "permissions": "Admin",
                                    "createdon": "2023-10-16T20:12:52.837Z",
                                    "__v": 0
                                }
                              ]
                    }
        '201':
          description: No order associated with the provided tags
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Failed
                  error:
                    type: string
                    example: "Order does not exists"
                  message:
                    type: string
                    example: "No Orders associated with the provided tags"
        '400':
          description:  Project does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Project does not exists"
                  message:
                    type: string
                    example: "cannot create order Blog Post in an unavailable project"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/{projectname}/orders/get_id:
    get:
      summary: retrieves a collection of content types by their id
      tags:
        - Content Collections Creation and Management
      description: This endpoint allows a user to retrieve orders under their account by their id
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: provide the id associated with the order/s
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the order was created
      responses:
        '200':
          description: A list of Orders associated with the provided id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  orders:
                    type: array
                    items: 
                      type: object
                    example: { 
                      status: "Success",
                      orders: [
                                {
                                   "_id": "652d9944ca3a089c6f054bca",
                                   "name": "tagged",
                                   "tags": [
                                      "homepage",
                                      "New"
                                    ],
                                    "project": "appa",
                                    "createdby": "lawdd@mail3",
                                    "parcels": [],
                                    "permissions": "Admin",
                                    "createdon": "2023-10-16T20:12:52.837Z",
                                    "__v": 0
                                }
                              ]
                    }

        '400':
          description:  Query string empty
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Query string has no ID parameter"
                  message:
                    type: string
                    example: "Check if you provided the correct ID or if query string has ID property"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"
        '404':
          description: No order associated with the provided id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Failed
                  error:
                    type: string
                    example: "Order does not exists"
                  message:
                    type: string
                    example: "No Orders associated with the provided id"

  /projects/{projectname}/orders/delete_order:
    get:
      summary: Deletes an order of content types
      tags:
        - Content Collections Creation and Management
      description: This endpoint allows a user to delete orders under their account by its id
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: provide the id associated with the order/s
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the order was created
      responses:
        '200':
          description: State of deletion
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  orders:
                    type: array
                    items: 
                      type: object
                    example: { 
                      status: "Success",
                      message: "Deleted: 1 Orders of ID: 6523bdf52125882953cbe2bd"
                    }

        '400':
          description:  Query string empty
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Query string has no ID parameter"
                  message:
                    type: string
                    example: "Check if you provided the correct ID or if query string has ID property"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"
        '201':
          description: No order associated with the provided id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Failed
                  error:
                    type: string
                    example: "Order does not exists"
                  message:
                    type: string
                    example: "No Orders associated with the provided id"

  /projects/{projectname}/parcel/types/new:
    post:
      summary: Adds a new content type defination to project
      tags:
        - Content Type Definition
      description: This endpoint allows a user to define a new content type shchema
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the order was created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                schema:
                  type: object
                  properties: 
                    fields:
                      type: array
                      items:
                        type: object
                        example: {
                          fieldtype: 'text',
                          content: {
                            title: 'Blog Heading',
                            payload: 'Korria launch a success!',
                            tags: ['korria', 'launch', '#MustRead'],
                            project: 'Korria Blog site',
                            order: 'Blogs',
                          }
                        }
                tags:
                  type: array
                  items:
                    type: string
              required:
                - tags
      responses:
        '201':
          description: Parcel Defined successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "Parcel defined Successfully"
                  name:
                    type: string
                    example: "Name of the added type"
                  id:
                    type: string
                    example: "652e308d3eecc071379ebe09"
                  project:
                    type: string
                    example: "ALX test website"
                  tags:
                    type: array
                    items: 
                      type: string
                    example: [ "fino", "blog"]
                  createdby:
                    type: string
                  date:
                    type: string
        '400':
          description:  Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Invalid Schema Body"
                  message:
                    type: string
                    example: "Check fields property in schema. At least one content data has to be present"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/{projectname}/parcel/types:
    get:
      summary: retrieves all parcels defined in the project
      tags:
        - Content Type Definition
      description: This endpoint allows a user to view all parcels defined for project
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the parcel/s was created
      responses:
        '200':
          description: an array of parcels defined in the project
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  parcels:
                    type: array
                    items:
                      type: object
                      example: [
                          {
                            "_id": "6526f77ec96fa492b8231fb8",
                            "name": "Blog Post",
                            "project": "appa",
                            "schema": {
                                "fields": [
                                  {
                                    "name": "another one",
                                    "data_type": "text"
                                  },
                                  {
                                    "name": "Blog Image",
                                    "data_type": "image",
                                    "src": " ",
                                    "alt": " "
                                  }
                                ],
                            "_id": "6526f77ec96fa492b8231fb9"
                          },
                          "tags": [
                            "fino",
                            "Blog"
                          ],
                          "createdby": "lawdd@mail3",
                          "createdon": "2023-10-11T19:29:02.387Z",
                          "__v": 0
                        }
                      ]

        '400':
          description:  Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Invalid Schema Body"
                  message:
                    type: string
                    example: "Check fields property in schema. At least one content data has to be present"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/{projectname}/parcel/types/delete:
    get:
      summary: Deletes a parcel type from project
      tags:
        - Content Type Definition
      description: This endpoint allows a user to delete parcels under their account by id
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: provide the id associated with the parcel/s
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the parcel was created
      responses:
        '200':
          description: State of deletion
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  message:
                    type: string
                    example: "Deleted: 1 parcel of ID: 6526f77ec96fa492b8231fb8 from project: ALX website"

        '400':
          description:  Query string empty or invalid/ parcel unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Query string has no ID parameter "
                  message:
                    type: string
                    example: "Check if you provided the correct ID or if query string has ID property"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/{projectname}/parcel/types/add_field:
    post:
      summary: define content data fields for a parcel or update a parcel with new content data fields
      tags:
        - Content Type Definition
      description: This endpoint allows a user to add new content data to parcels. or updates fields when present with new data
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: provide the id associated with the parcel/s
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the parcel was created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type:
                  type: object
                minItems: 1
                example:
                  {
                    name: blog post,
                    data_type: text,
                    payload: alx specialisation portfolio project almost done
                  }
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: The updated document
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  updated-parcel:
                    type: object
                    example: {
                      "_id": "6526fd00e88c9b0431731cc1",
                      "name": "Blog Post",
                      "project": "appa",
                      "schema": {
                          "fields": [
                            {
                              "name": "some otherone",
                              "data_type": "text"
                            },
                            {
                              "name": "Blog Image",
                              "data_type": "image",
                              "src": " ",
                              "alt": " "
                            },
                          ],
                      },
                      "tags": [
                        "fino",
                        "Blog"
                      ],
                      "createdby": "lawdd@mail3",
                      "createdon": "2023-10-11T19:52:32.974Z",
                      "__v": 0
                    }
        '400':
          description:  project not available
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Could not find project: ALX website"
                  message:
                    type: string
                    example: "Check the name of the project provided in the url path"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/{projectname}/content/image/new:
    post:
      summary: Uploads a new image to the CMS
      tags:
        - Image Upload And Management 
      description: This endpoint allows a user to upload images to their account. This is limitted  to only one image upload at a time. Images require an 'alt' text field for accesibility settings
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the image will be used
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: an image of the format ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.apng', '.avif']
                order:
                  type: string
                  description: This is the collection on which to save the uploaded images
                  example: "User-Stories"
                title:
                  type: string
                  description: Provide The name to call the image the image once uploaded. If left empty, default file name will be used
                  example: "header-image"
                type:
                  type: string
                  description: Indicate the type of content being uploaded. Currently supported types are "image" for this endpoint. THE STRING "image" IS CASE-SENSITIVE!!
                alt:
                  type: string
                  description: Provide alternative text to use for accesibility settings
                  example: "a man sitting on a wooden bench" 
              required:
                - file
                - title
                - type
                - alt
      responses:
        '201':
          description: Image uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  message:
                    type: string
                    example: {
                      "status": "Success",
                      "message": "Parcel image added succesfully!",
                      "details": {
                         "name": "my-images-02",
                         "type": "Image",
                         "src": "localhost:8080/uploads/some/images/myphotos/my-images-02.png",
                         "alt": "something",
                         "order": "myphotos",
                         "project": "some",
                         "createdon": "2023-10-17T14:33:20.508Z",
                         "_id": "652e9b302576b7140c8b2275"
                      }
                    }

        '400':
          description:  Invalid format uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Files of type: '.mp4' are not supported"
                  message:
                    type: string
                    example: "Please upload images of type .png,.jpg,.jpeg,.gif,.svg,.apng,.avif only"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Malformed token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/{projectname}/content/image/all:
    get:
      summary: retrieves all images uploaded under project
      tags:
        - Image Upload And Management 
      description: This endpoint allows a user to retrieve all images uploaded under the named project
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the order will be created
      responses:
        '200':
          description: A list of Orders associated with the provided tags
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  images:
                    type: array
                    items:
                      type: object
                    example: [ 
                                {
                                  "_id": "652ea62c99f9cea6c33c7b58",
                                  "title": "my-images-02",
                                  "data_type": "Image",
                                  "src": "localhost:8080/uploads/some/images/some-default-images/my-images-02.png",
                                  "alt": "something",
                                  "project": "some",
                                  "createdon": "2023-10-17T15:20:12.889Z",
                                  "__v": 0
                                }
                    ]
        '201':
          description: No order associated with the provided tags
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Failed
                  error:
                    type: string
                    example: "Order does not exists"
                  message:
                    type: string
                    example: "No Orders associated with the provided tags"
        '400':
          description:  Project does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Project does not exists"
                  message:
                    type: string
                    example: "cannot create order Blog Post in an unavailable project"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"

  /projects/{projectname}/content/image/delete:
    post:
      summary: Uploads a new image to the CMS
      tags:
        - Image Upload And Management 
      description: This endpoint allows a client ot delete an uploaded image
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the image was uploaded
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Provide the title of the image to remove
                  example: "header-image"
              required:
                - title

      responses:
        '201':
          description: Image uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  message:
                    type: string
                    example: {
                      "status": "Success",
                      "message": "Parcel image added succesfully!",
                      "details": {
                         "name": "my-images-02",
                         "type": "Image",
                         "src": "localhost:8080/uploads/content/ALX-BLOG/images/my-images-02.png",
                         "alt": "something",
                         "order": "myphotos",
                         "project": "some",
                         "createdon": "2023-10-17T14:33:20.508Z",
                         "_id": "652e9b302576b7140c8b2275"
                      }
                    }

        '400':
          description:  Image not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Image not found in project"
                  message:
                    type: string
                    example: "Check images, perhaps it has been deleted"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Malformed token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"
  
  /projects/{projectname}/content/text/new:
    post:
      summary: Uploads new text data to the CMS
      tags:
        - Text Data Upload And Management 
      description: This endpoint allows a user to upload text data to their account. The request to this endpoint require a verifiable schema. (See Example request body). The
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the image will be used
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fieldtype:
                  type: string
                  example: text
                content:
                  type: object
                  properties:
                    title:
                      type: string
                      example: Blog Heading
                    payload:
                      type: string
                      example: Korria Blog finally launches
                    tags:
                      type: array
                      fields:
                          type: string
                      example: ["Korria Blog"]
                    order:
                      type: string
                      example: Blog Posts

              required:
                - fieldtype
                - content
      responses:
        '201':
          description: text uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  message:
                    type: string
                    example: {
                      "status": "Success",
                      "message": "text added succesfully!",
                      "details": {
                        "fieldtype": "Image",
                        "content": {
                          "title": "Blog Heading",
                          "payload": "Korria CMS launches finally",
                          "tags": ["Korria blog"],
                          "project": "Korria Blog",
                          "order": "Blog Posts",
                          "createdon": "2023-10-17T14:33:20.508Z",
                          "_id": "652e9b302576b7140c8b2275"
                        }
                      }
                    }

        '400':
          description:  Invalid format uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Files of type: '.mp4' are not supported"
                  message:
                    type: string
                    example: "Please upload images of type .png,.jpg,.jpeg,.gif,.svg,.apng,.avif only"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Malformed token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"
  
  /projects/{projectname}/content/text/all:
    get:
      summary: retrieves all images uploaded under project
      tags:
        - Text Data Upload And Management 
      description: This endpoint allows a user to retrieve all text data created under the named project
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the texts were created
      responses:
        '200':
          description: A list of texts associated with the provided project
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  texts:
                    type: array
                    items:
                      type: object
                    example: [ 
                                {
                                  "fieldtype": "text",
                                  "content": {
                                    "title": "Blog Heading",
                                    "payload": "Korria Blog finally launches",
                                    "tags": [
                                      "Korria Blog"
                                    ],
                                    "order": "Blog Posts"
                                  }
                                }
                    ]
        '400':
          description:  Project does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Project not found"
                  message:
                    type: string
                    example: "The requested resource cannot be found in project ppa. Spelling issues? Or create a new one with name ppa"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"
  
  /projects/{projectname}/content/text/delete:
    get:
      summary: Deletes text data from the project 
      tags:
        - Text Data Upload And Management 
      description: This endpoint allows a client to delete text data from a project
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: provide the id of the text to delete
        - in: path
          name: projectname
          required: true
          schema:
            type: string
            minimum: 1
          description: provide the project name where the text was created

      responses:
        '200':
          description: Text removed succefully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Success
                  message:
                    type: string
                    example: "Deleted: 1 text of ID: 65317ba58173e141e3c39169 from project: Korria Blogs"

        '400':
          description:  text not found/ bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  error:
                    type: string
                    example: "Image not found in project"
                  message:
                    type: string
                    example: "Check text, perhaps it has been deleted"
        '401':
          description: Missing Auth Headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Missing token"
        '403':
          description: Invalid Auth Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Malformed token"
        '402':
          description: Expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "token expired please log in again"